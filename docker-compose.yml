version: '3.8'

services:
  # Main Eitaa Messenger Crawler service
  crawler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eitaa-crawler
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - PYTHONUNBUFFERED=1
      - CHANNELS_FILE=/config/users.json
      - OUTPUT_DIR=/data/output/messages
      - BIOS_DIR=/data/output/bios
      - LOGS_DIR=/data/logs
      - META_DIR=/data/meta
      - KAFKA_BROKER=kafka:9092
      - CRAWL_INTERVAL_SECONDS=300
      - USE_KAFKA=true
    volumes:
      - ./config:/config
      - crawler_data:/data
    networks:
      - crawler_network
    command: python -m app.eita_crawler --kafka --interval 300
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zookeeper service (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - crawler_network
    restart: unless-stopped

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - crawler_network
    restart: unless-stopped

  # Kafka-UI for monitoring Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: eitaa-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - crawler_network
    restart: unless-stopped

volumes:
  crawler_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  crawler_network:
    driver: bridge
